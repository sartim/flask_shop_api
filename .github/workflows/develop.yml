name: stage-build

on:
  push:
    branches: [ develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Setup CI/CD Server
      run: |
        sudo apt-get update &&
        sudo apt-get install -y redis-server &&
        sudo apt-get install -y awscli
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
      env:
          ENV: ${{ secrets.ENV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          PAGINATE_BY: ${{ secrets.PAGINATE_BY }}
          REDIS_EXPIRE: ${{ secrets.REDIS_EXPIRE }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          APP_EMAIL: ${{ secrets.APP_EMAIL }}
          APP_EMAIL_PASSWORD: ${{ secrets.APP_EMAIL_PASSWORD }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          CACHED_QUERY: ${{ secrets.CACHED_QUERY }}
  Deploy:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      max-parallel: 1
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Deploy to stage
      # run: aws deploy create-deployment --region ${{ secrets.AWS_REGION }} --application-name flask-shop-api --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name flask-shop-api-stage-dg --description "Github deployment for commit ${GITHUB_SHA}" --github-location repository=sartim/flask_shop_api,commitId=${GITHUB_SHA}
      run: |
        echo "Deploy to stage"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
